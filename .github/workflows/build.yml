name: Build Docker image

on:
  push:
    branches:
      - main
    tags:
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image-stage1:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (stage 1)
        uses: docker/build-push-action@v3
        with:
          context: ./stage1
          push: false
          platforms: linux/armhf
          tags: stage1:latest
          cache-from: type=gha,scope=${{ github.ref }}-stage1
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-stage1
          outputs: type=docker,dest=/tmp/stage1.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: stage1
          path: /tmp/stage1.tar

  build-image-stage2:
    needs: build-image-stage1
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: stage1
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/stage1.tar
          docker image ls -a

      - name: Push image to local registry
        run: |
          docker image tag stage1:latest localhost:5000/stage1:latest
          docker image push localhost:5000/stage1:latest

      - name: Build Docker image (stage 2)
        uses: docker/build-push-action@v3
        with:
          context: ./stage2
          build-contexts: stage1=docker-image://localhost:5000/stage1:latest
          push: false
          platforms: linux/armhf
          tags: stage2:latest
          cache-from: type=gha,scope=${{ github.ref }}-stage2
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-stage2
          outputs: type=docker,dest=/tmp/stage2.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: stage2
          path: /tmp/stage2.tar

  build-image-stage3:
    needs: build-image-stage2
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: stage2
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/stage2.tar
          docker image ls -a

      - name: Push image to local registry
        run: |
          docker image tag stage2:latest localhost:5000/stage2:latest
          docker image push localhost:5000/stage2:latest

      - name: Build Docker image (stage 3)
        uses: docker/build-push-action@v3
        with:
          context: ./stage3
          build-contexts: stage2=docker-image://localhost:5000/stage2:latest
          push: false
          platforms: linux/armhf
          tags: stage3:latest
          cache-from: type=gha,scope=${{ github.ref }}-stage3
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-stage3
          outputs: type=docker,dest=/tmp/stage3.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: stage3
          path: /tmp/stage3.tar

  build-finalize:
    needs: build-image-stage3
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: stage3
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/stage3.tar
          docker image ls -a

      - name: Push image to local registry
        run: |
          docker image tag stage3:latest localhost:5000/stage3:latest
          docker image push localhost:5000/stage3:latest

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Build Docker image (stage 5)
        uses: docker/build-push-action@v3
        with:
          context: ./finalize
          build-contexts: base=docker-image://localhost:5000/stage3:latest
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/armhf
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.ref }}-finalize
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-finalize
